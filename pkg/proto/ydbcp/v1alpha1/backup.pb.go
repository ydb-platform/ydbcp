// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.32.1
// source: ydbcp/v1alpha1/backup.proto

package ydbcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackupField int32

const (
	BackupField_DATABASE_NAME BackupField = 0
	BackupField_STATUS        BackupField = 1
	BackupField_CREATED_AT    BackupField = 2
	BackupField_EXPIRE_AT     BackupField = 3
	BackupField_COMPLETED_AT  BackupField = 4
)

// Enum value maps for BackupField.
var (
	BackupField_name = map[int32]string{
		0: "DATABASE_NAME",
		1: "STATUS",
		2: "CREATED_AT",
		3: "EXPIRE_AT",
		4: "COMPLETED_AT",
	}
	BackupField_value = map[string]int32{
		"DATABASE_NAME": 0,
		"STATUS":        1,
		"CREATED_AT":    2,
		"EXPIRE_AT":     3,
		"COMPLETED_AT":  4,
	}
)

func (x BackupField) Enum() *BackupField {
	p := new(BackupField)
	*p = x
	return p
}

func (x BackupField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupField) Descriptor() protoreflect.EnumDescriptor {
	return file_ydbcp_v1alpha1_backup_proto_enumTypes[0].Descriptor()
}

func (BackupField) Type() protoreflect.EnumType {
	return &file_ydbcp_v1alpha1_backup_proto_enumTypes[0]
}

func (x BackupField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupField.Descriptor instead.
func (BackupField) EnumDescriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{0}
}

type EncryptionSettings_Algorithm int32

const (
	EncryptionSettings_UNSPECIFIED       EncryptionSettings_Algorithm = 0
	EncryptionSettings_AES_128_GCM       EncryptionSettings_Algorithm = 1
	EncryptionSettings_AES_256_GCM       EncryptionSettings_Algorithm = 2
	EncryptionSettings_CHACHA20_POLY1305 EncryptionSettings_Algorithm = 3
)

// Enum value maps for EncryptionSettings_Algorithm.
var (
	EncryptionSettings_Algorithm_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "AES_128_GCM",
		2: "AES_256_GCM",
		3: "CHACHA20_POLY1305",
	}
	EncryptionSettings_Algorithm_value = map[string]int32{
		"UNSPECIFIED":       0,
		"AES_128_GCM":       1,
		"AES_256_GCM":       2,
		"CHACHA20_POLY1305": 3,
	}
)

func (x EncryptionSettings_Algorithm) Enum() *EncryptionSettings_Algorithm {
	p := new(EncryptionSettings_Algorithm)
	*p = x
	return p
}

func (x EncryptionSettings_Algorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionSettings_Algorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_ydbcp_v1alpha1_backup_proto_enumTypes[1].Descriptor()
}

func (EncryptionSettings_Algorithm) Type() protoreflect.EnumType {
	return &file_ydbcp_v1alpha1_backup_proto_enumTypes[1]
}

func (x EncryptionSettings_Algorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionSettings_Algorithm.Descriptor instead.
func (EncryptionSettings_Algorithm) EnumDescriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{0, 0}
}

type Backup_Status int32

const (
	Backup_STATUS_UNSPECIFIED Backup_Status = 0
	Backup_PENDING            Backup_Status = 1
	Backup_AVAILABLE          Backup_Status = 2
	Backup_ERROR              Backup_Status = 3
	Backup_CANCELLED          Backup_Status = 4
	Backup_DELETED            Backup_Status = 5
	Backup_RUNNING            Backup_Status = 6
	Backup_DELETING           Backup_Status = 7
)

// Enum value maps for Backup_Status.
var (
	Backup_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PENDING",
		2: "AVAILABLE",
		3: "ERROR",
		4: "CANCELLED",
		5: "DELETED",
		6: "RUNNING",
		7: "DELETING",
	}
	Backup_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PENDING":            1,
		"AVAILABLE":          2,
		"ERROR":              3,
		"CANCELLED":          4,
		"DELETED":            5,
		"RUNNING":            6,
		"DELETING":           7,
	}
)

func (x Backup_Status) Enum() *Backup_Status {
	p := new(Backup_Status)
	*p = x
	return p
}

func (x Backup_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Backup_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ydbcp_v1alpha1_backup_proto_enumTypes[2].Descriptor()
}

func (Backup_Status) Type() protoreflect.EnumType {
	return &file_ydbcp_v1alpha1_backup_proto_enumTypes[2]
}

func (x Backup_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Backup_Status.Descriptor instead.
func (Backup_Status) EnumDescriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{1, 0}
}

type EncryptionSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Algorithm for backup encryption
	Algorithm EncryptionSettings_Algorithm `protobuf:"varint,1,opt,name=algorithm,proto3,enum=ydbcp.v1alpha1.EncryptionSettings_Algorithm" json:"algorithm,omitempty"`
	// Types that are assignable to KeyEncryptionKey:
	//
	//	*EncryptionSettings_KmsKey_
	KeyEncryptionKey isEncryptionSettings_KeyEncryptionKey `protobuf_oneof:"KeyEncryptionKey"`
}

func (x *EncryptionSettings) Reset() {
	*x = EncryptionSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionSettings) ProtoMessage() {}

func (x *EncryptionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionSettings.ProtoReflect.Descriptor instead.
func (*EncryptionSettings) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{0}
}

func (x *EncryptionSettings) GetAlgorithm() EncryptionSettings_Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return EncryptionSettings_UNSPECIFIED
}

func (m *EncryptionSettings) GetKeyEncryptionKey() isEncryptionSettings_KeyEncryptionKey {
	if m != nil {
		return m.KeyEncryptionKey
	}
	return nil
}

func (x *EncryptionSettings) GetKmsKey() *EncryptionSettings_KmsKey {
	if x, ok := x.GetKeyEncryptionKey().(*EncryptionSettings_KmsKey_); ok {
		return x.KmsKey
	}
	return nil
}

type isEncryptionSettings_KeyEncryptionKey interface {
	isEncryptionSettings_KeyEncryptionKey()
}

type EncryptionSettings_KmsKey_ struct {
	KmsKey *EncryptionSettings_KmsKey `protobuf:"bytes,2,opt,name=kms_key,json=kmsKey,proto3,oneof"`
}

func (*EncryptionSettings_KmsKey_) isEncryptionSettings_KeyEncryptionKey() {}

type Backup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the backup.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An identifier of an external resource which holds the record about the backup
	// (it can be the container id where the database is located).
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Name of the database for which the backup was created.
	DatabaseName string `protobuf:"bytes,3,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	// GRPC endpoint of the database.
	DatabaseEndpoint string `protobuf:"bytes,4,opt,name=database_endpoint,json=databaseEndpoint,proto3" json:"database_endpoint,omitempty"`
	// S3 location where the backup is stored.
	Location *S3Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// Audit information for the backup.
	Audit *AuditInfo `protobuf:"bytes,6,opt,name=audit,proto3" json:"audit,omitempty"`
	// Size of the backup in bytes.
	Size int64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// Current status of the backup.
	Status Backup_Status `protobuf:"varint,8,opt,name=status,proto3,enum=ydbcp.v1alpha1.Backup_Status" json:"status,omitempty"`
	// Message associated with the backup status.
	Message string `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	// Timestamp when the backup will expire.
	ExpireAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	// Unique identifier for the schedule that initiated the backup.
	ScheduleId string `protobuf:"bytes,11,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// List of source paths included in the backup (empty list means backup of root directory).
	SourcePaths []string `protobuf:"bytes,12,rep,name=source_paths,json=sourcePaths,proto3" json:"source_paths,omitempty"` // [(size) = "<=256"];
	// Backup encryption settings,
	// unspecified field means the backup is unencrypted.
	EncryptionSettings *EncryptionSettings `protobuf:"bytes,13,opt,name=encryption_settings,json=encryptionSettings,proto3" json:"encryption_settings,omitempty"`
}

func (x *Backup) Reset() {
	*x = Backup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup) ProtoMessage() {}

func (x *Backup) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup.ProtoReflect.Descriptor instead.
func (*Backup) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{1}
}

func (x *Backup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Backup) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Backup) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *Backup) GetDatabaseEndpoint() string {
	if x != nil {
		return x.DatabaseEndpoint
	}
	return ""
}

func (x *Backup) GetLocation() *S3Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Backup) GetAudit() *AuditInfo {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *Backup) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Backup) GetStatus() Backup_Status {
	if x != nil {
		return x.Status
	}
	return Backup_STATUS_UNSPECIFIED
}

func (x *Backup) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Backup) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

func (x *Backup) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *Backup) GetSourcePaths() []string {
	if x != nil {
		return x.SourcePaths
	}
	return nil
}

func (x *Backup) GetEncryptionSettings() *EncryptionSettings {
	if x != nil {
		return x.EncryptionSettings
	}
	return nil
}

type S3Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// S3 endpoint.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// S3 bucket name.
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// S3 region.
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	// Path prefix in the S3 bucket.
	PathPrefix string `protobuf:"bytes,4,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
}

func (x *S3Location) Reset() {
	*x = S3Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Location) ProtoMessage() {}

func (x *S3Location) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Location.ProtoReflect.Descriptor instead.
func (*S3Location) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{2}
}

func (x *S3Location) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *S3Location) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3Location) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *S3Location) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

type AuditInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Creator of the backup, YDBCP receives this info from the IAM.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Timestamp when the TakeBackup operation was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp when the TakeBackup operation was completed.
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *AuditInfo) Reset() {
	*x = AuditInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditInfo) ProtoMessage() {}

func (x *AuditInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditInfo.ProtoReflect.Descriptor instead.
func (*AuditInfo) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{3}
}

func (x *AuditInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AuditInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AuditInfo) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type EncryptionSettings_KmsKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The KMS key ID that should be used to encrypt the DEK (data encryption key).
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *EncryptionSettings_KmsKey) Reset() {
	*x = EncryptionSettings_KmsKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionSettings_KmsKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionSettings_KmsKey) ProtoMessage() {}

func (x *EncryptionSettings_KmsKey) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionSettings_KmsKey.ProtoReflect.Descriptor instead.
func (*EncryptionSettings_KmsKey) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EncryptionSettings_KmsKey) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

var File_ydbcp_v1alpha1_backup_proto protoreflect.FileDescriptor

var file_ydbcp_v1alpha1_backup_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x79,
	0x64, 0x62, 0x63, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2,
	0x02, 0x0a, 0x12, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4a, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x12, 0x44, 0x0a, 0x07, 0x6b, 0x6d, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52,
	0x06, 0x6b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x1a, 0x1f, 0x0a, 0x06, 0x4b, 0x6d, 0x73, 0x4b, 0x65,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x45, 0x53, 0x5f, 0x31, 0x32,
	0x38, 0x5f, 0x47, 0x43, 0x4d, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x45, 0x53, 0x5f, 0x32,
	0x35, 0x36, 0x5f, 0x47, 0x43, 0x4d, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x48, 0x41, 0x43,
	0x48, 0x41, 0x32, 0x30, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x31, 0x33, 0x30, 0x35, 0x10, 0x03, 0x42,
	0x12, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x22, 0xad, 0x05, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x33, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79, 0x64, 0x62,
	0x63, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x53,
	0x0a, 0x13, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x64,
	0x62, 0x63, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x7e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x07, 0x22, 0x79, 0x0a, 0x0a, 0x53, 0x33, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x9f,
	0x01, 0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x2a, 0x5d, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x04, 0x42,
	0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64,
	0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x63, 0x70,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x64, 0x62, 0x63, 0x70,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x79, 0x64, 0x62, 0x63, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ydbcp_v1alpha1_backup_proto_rawDescOnce sync.Once
	file_ydbcp_v1alpha1_backup_proto_rawDescData = file_ydbcp_v1alpha1_backup_proto_rawDesc
)

func file_ydbcp_v1alpha1_backup_proto_rawDescGZIP() []byte {
	file_ydbcp_v1alpha1_backup_proto_rawDescOnce.Do(func() {
		file_ydbcp_v1alpha1_backup_proto_rawDescData = protoimpl.X.CompressGZIP(file_ydbcp_v1alpha1_backup_proto_rawDescData)
	})
	return file_ydbcp_v1alpha1_backup_proto_rawDescData
}

var file_ydbcp_v1alpha1_backup_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ydbcp_v1alpha1_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ydbcp_v1alpha1_backup_proto_goTypes = []any{
	(BackupField)(0),                  // 0: ydbcp.v1alpha1.BackupField
	(EncryptionSettings_Algorithm)(0), // 1: ydbcp.v1alpha1.EncryptionSettings.Algorithm
	(Backup_Status)(0),                // 2: ydbcp.v1alpha1.Backup.Status
	(*EncryptionSettings)(nil),        // 3: ydbcp.v1alpha1.EncryptionSettings
	(*Backup)(nil),                    // 4: ydbcp.v1alpha1.Backup
	(*S3Location)(nil),                // 5: ydbcp.v1alpha1.S3Location
	(*AuditInfo)(nil),                 // 6: ydbcp.v1alpha1.AuditInfo
	(*EncryptionSettings_KmsKey)(nil), // 7: ydbcp.v1alpha1.EncryptionSettings.KmsKey
	(*timestamppb.Timestamp)(nil),     // 8: google.protobuf.Timestamp
}
var file_ydbcp_v1alpha1_backup_proto_depIdxs = []int32{
	1, // 0: ydbcp.v1alpha1.EncryptionSettings.algorithm:type_name -> ydbcp.v1alpha1.EncryptionSettings.Algorithm
	7, // 1: ydbcp.v1alpha1.EncryptionSettings.kms_key:type_name -> ydbcp.v1alpha1.EncryptionSettings.KmsKey
	5, // 2: ydbcp.v1alpha1.Backup.location:type_name -> ydbcp.v1alpha1.S3Location
	6, // 3: ydbcp.v1alpha1.Backup.audit:type_name -> ydbcp.v1alpha1.AuditInfo
	2, // 4: ydbcp.v1alpha1.Backup.status:type_name -> ydbcp.v1alpha1.Backup.Status
	8, // 5: ydbcp.v1alpha1.Backup.expire_at:type_name -> google.protobuf.Timestamp
	3, // 6: ydbcp.v1alpha1.Backup.encryption_settings:type_name -> ydbcp.v1alpha1.EncryptionSettings
	8, // 7: ydbcp.v1alpha1.AuditInfo.created_at:type_name -> google.protobuf.Timestamp
	8, // 8: ydbcp.v1alpha1.AuditInfo.completed_at:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_ydbcp_v1alpha1_backup_proto_init() }
func file_ydbcp_v1alpha1_backup_proto_init() {
	if File_ydbcp_v1alpha1_backup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ydbcp_v1alpha1_backup_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptionSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Backup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*S3Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AuditInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptionSettings_KmsKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ydbcp_v1alpha1_backup_proto_msgTypes[0].OneofWrappers = []any{
		(*EncryptionSettings_KmsKey_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ydbcp_v1alpha1_backup_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ydbcp_v1alpha1_backup_proto_goTypes,
		DependencyIndexes: file_ydbcp_v1alpha1_backup_proto_depIdxs,
		EnumInfos:         file_ydbcp_v1alpha1_backup_proto_enumTypes,
		MessageInfos:      file_ydbcp_v1alpha1_backup_proto_msgTypes,
	}.Build()
	File_ydbcp_v1alpha1_backup_proto = out.File
	file_ydbcp_v1alpha1_backup_proto_rawDesc = nil
	file_ydbcp_v1alpha1_backup_proto_goTypes = nil
	file_ydbcp_v1alpha1_backup_proto_depIdxs = nil
}
