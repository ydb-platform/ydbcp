// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: ydbcp/v1alpha1/backup_schedule_service.proto

package ydbcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateBackupScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// fields of MakeBackupRequest to schedule
	ContainerId          string                  `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	DatabaseName         string                  `protobuf:"bytes,2,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	Endpoint             string                  `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	SourcePaths          []string                `protobuf:"bytes,4,rep,name=source_paths,json=sourcePaths,proto3" json:"source_paths,omitempty"`                                // [(size) = "<=256"];
	SourcePathsToExclude []string                `protobuf:"bytes,5,rep,name=source_paths_to_exclude,json=sourcePathsToExclude,proto3" json:"source_paths_to_exclude,omitempty"` // [(size) = "<=256"];
	ScheduleName         string                  `protobuf:"bytes,6,opt,name=schedule_name,json=scheduleName,proto3" json:"schedule_name,omitempty"`
	ScheduleSettings     *BackupScheduleSettings `protobuf:"bytes,7,opt,name=schedule_settings,json=scheduleSettings,proto3" json:"schedule_settings,omitempty"`
}

func (x *CreateBackupScheduleRequest) Reset() {
	*x = CreateBackupScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBackupScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackupScheduleRequest) ProtoMessage() {}

func (x *CreateBackupScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackupScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateBackupScheduleRequest) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBackupScheduleRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *CreateBackupScheduleRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *CreateBackupScheduleRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateBackupScheduleRequest) GetSourcePaths() []string {
	if x != nil {
		return x.SourcePaths
	}
	return nil
}

func (x *CreateBackupScheduleRequest) GetSourcePathsToExclude() []string {
	if x != nil {
		return x.SourcePathsToExclude
	}
	return nil
}

func (x *CreateBackupScheduleRequest) GetScheduleName() string {
	if x != nil {
		return x.ScheduleName
	}
	return ""
}

func (x *CreateBackupScheduleRequest) GetScheduleSettings() *BackupScheduleSettings {
	if x != nil {
		return x.ScheduleSettings
	}
	return nil
}

type UpdateBackupScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// fields of MakeBackupRequest to schedule
	SourcePaths          []string                `protobuf:"bytes,2,rep,name=source_paths,json=sourcePaths,proto3" json:"source_paths,omitempty"`                                // [(size) = "<=256"];
	SourcePathsToExclude []string                `protobuf:"bytes,3,rep,name=source_paths_to_exclude,json=sourcePathsToExclude,proto3" json:"source_paths_to_exclude,omitempty"` // [(size) = "<=256"];
	ScheduleName         string                  `protobuf:"bytes,4,opt,name=schedule_name,json=scheduleName,proto3" json:"schedule_name,omitempty"`
	ScheduleSettings     *BackupScheduleSettings `protobuf:"bytes,5,opt,name=schedule_settings,json=scheduleSettings,proto3" json:"schedule_settings,omitempty"`
}

func (x *UpdateBackupScheduleRequest) Reset() {
	*x = UpdateBackupScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBackupScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBackupScheduleRequest) ProtoMessage() {}

func (x *UpdateBackupScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBackupScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateBackupScheduleRequest) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateBackupScheduleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBackupScheduleRequest) GetSourcePaths() []string {
	if x != nil {
		return x.SourcePaths
	}
	return nil
}

func (x *UpdateBackupScheduleRequest) GetSourcePathsToExclude() []string {
	if x != nil {
		return x.SourcePathsToExclude
	}
	return nil
}

func (x *UpdateBackupScheduleRequest) GetScheduleName() string {
	if x != nil {
		return x.ScheduleName
	}
	return ""
}

func (x *UpdateBackupScheduleRequest) GetScheduleSettings() *BackupScheduleSettings {
	if x != nil {
		return x.ScheduleSettings
	}
	return nil
}

type ListBackupSchedulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId      string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	DatabaseNameMask string `protobuf:"bytes,2,opt,name=database_name_mask,json=databaseNameMask,proto3" json:"database_name_mask,omitempty"`
	// The maximum number of results per page that should be returned. If the number of available
	// results is larger than `page_size`, the service returns a `next_page_token` that can be used
	// to get the next page of results in subsequent ListBackupSchedules requests.
	// Acceptable values are 0 to 1000, inclusive. Default value: 100.
	PageSize uint32 `protobuf:"varint,1000,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // [(value) = "0-1000"];
	// Page token. Set `page_token` to the `next_page_token` returned by a previous ListBackups
	// request to get the next page of results.
	PageToken string `protobuf:"bytes,1001,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // [(length) = "<=100"];
}

func (x *ListBackupSchedulesRequest) Reset() {
	*x = ListBackupSchedulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBackupSchedulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupSchedulesRequest) ProtoMessage() {}

func (x *ListBackupSchedulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupSchedulesRequest.ProtoReflect.Descriptor instead.
func (*ListBackupSchedulesRequest) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListBackupSchedulesRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ListBackupSchedulesRequest) GetDatabaseNameMask() string {
	if x != nil {
		return x.DatabaseNameMask
	}
	return ""
}

func (x *ListBackupSchedulesRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListBackupSchedulesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListBackupSchedulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedules     []*BackupSchedule `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	NextPageToken string            `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListBackupSchedulesResponse) Reset() {
	*x = ListBackupSchedulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBackupSchedulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupSchedulesResponse) ProtoMessage() {}

func (x *ListBackupSchedulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupSchedulesResponse.ProtoReflect.Descriptor instead.
func (*ListBackupSchedulesResponse) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListBackupSchedulesResponse) GetSchedules() []*BackupSchedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *ListBackupSchedulesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetBackupScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBackupScheduleRequest) Reset() {
	*x = GetBackupScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackupScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackupScheduleRequest) ProtoMessage() {}

func (x *GetBackupScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackupScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetBackupScheduleRequest) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetBackupScheduleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ToggleBackupScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ActiveState bool   `protobuf:"varint,2,opt,name=active_state,json=activeState,proto3" json:"active_state,omitempty"`
}

func (x *ToggleBackupScheduleRequest) Reset() {
	*x = ToggleBackupScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleBackupScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleBackupScheduleRequest) ProtoMessage() {}

func (x *ToggleBackupScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleBackupScheduleRequest.ProtoReflect.Descriptor instead.
func (*ToggleBackupScheduleRequest) Descriptor() ([]byte, []int) {
	return file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescGZIP(), []int{5}
}

func (x *ToggleBackupScheduleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ToggleBackupScheduleRequest) GetActiveState() bool {
	if x != nil {
		return x.ActiveState
	}
	return false
}

var File_ydbcp_v1alpha1_backup_schedule_service_proto protoreflect.FileDescriptor

var file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x79, 0x64, 0x62, 0x63, 0x70, 0x1a, 0x24, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73,
	0x54, 0x6f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a,
	0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x64, 0x62, 0x63,
	0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x35, 0x0a,
	0x17, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x54, 0x6f, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x7a, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x1b, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x32, 0xbb, 0x03,
	0x0a, 0x15, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x22, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x22, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x21, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x22, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x3e, 0x5a, 0x3c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x64, 0x62, 0x63, 0x70, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x79, 0x64, 0x62, 0x63, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescOnce sync.Once
	file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescData = file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDesc
)

func file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescGZIP() []byte {
	file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescOnce.Do(func() {
		file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescData)
	})
	return file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDescData
}

var file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ydbcp_v1alpha1_backup_schedule_service_proto_goTypes = []any{
	(*CreateBackupScheduleRequest)(nil), // 0: ydbcp.CreateBackupScheduleRequest
	(*UpdateBackupScheduleRequest)(nil), // 1: ydbcp.UpdateBackupScheduleRequest
	(*ListBackupSchedulesRequest)(nil),  // 2: ydbcp.ListBackupSchedulesRequest
	(*ListBackupSchedulesResponse)(nil), // 3: ydbcp.ListBackupSchedulesResponse
	(*GetBackupScheduleRequest)(nil),    // 4: ydbcp.GetBackupScheduleRequest
	(*ToggleBackupScheduleRequest)(nil), // 5: ydbcp.ToggleBackupScheduleRequest
	(*BackupScheduleSettings)(nil),      // 6: ydbcp.BackupScheduleSettings
	(*BackupSchedule)(nil),              // 7: ydbcp.BackupSchedule
}
var file_ydbcp_v1alpha1_backup_schedule_service_proto_depIdxs = []int32{
	6, // 0: ydbcp.CreateBackupScheduleRequest.schedule_settings:type_name -> ydbcp.BackupScheduleSettings
	6, // 1: ydbcp.UpdateBackupScheduleRequest.schedule_settings:type_name -> ydbcp.BackupScheduleSettings
	7, // 2: ydbcp.ListBackupSchedulesResponse.schedules:type_name -> ydbcp.BackupSchedule
	0, // 3: ydbcp.BackupScheduleService.CreateBackupSchedule:input_type -> ydbcp.CreateBackupScheduleRequest
	1, // 4: ydbcp.BackupScheduleService.UpdateBackupSchedule:input_type -> ydbcp.UpdateBackupScheduleRequest
	4, // 5: ydbcp.BackupScheduleService.GetBackupSchedule:input_type -> ydbcp.GetBackupScheduleRequest
	2, // 6: ydbcp.BackupScheduleService.ListBackupSchedules:input_type -> ydbcp.ListBackupSchedulesRequest
	5, // 7: ydbcp.BackupScheduleService.ToggleBackupSchedule:input_type -> ydbcp.ToggleBackupScheduleRequest
	7, // 8: ydbcp.BackupScheduleService.CreateBackupSchedule:output_type -> ydbcp.BackupSchedule
	7, // 9: ydbcp.BackupScheduleService.UpdateBackupSchedule:output_type -> ydbcp.BackupSchedule
	7, // 10: ydbcp.BackupScheduleService.GetBackupSchedule:output_type -> ydbcp.BackupSchedule
	3, // 11: ydbcp.BackupScheduleService.ListBackupSchedules:output_type -> ydbcp.ListBackupSchedulesResponse
	7, // 12: ydbcp.BackupScheduleService.ToggleBackupSchedule:output_type -> ydbcp.BackupSchedule
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ydbcp_v1alpha1_backup_schedule_service_proto_init() }
func file_ydbcp_v1alpha1_backup_schedule_service_proto_init() {
	if File_ydbcp_v1alpha1_backup_schedule_service_proto != nil {
		return
	}
	file_ydbcp_v1alpha1_backup_schedule_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBackupScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateBackupScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListBackupSchedulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListBackupSchedulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetBackupScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ToggleBackupScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ydbcp_v1alpha1_backup_schedule_service_proto_goTypes,
		DependencyIndexes: file_ydbcp_v1alpha1_backup_schedule_service_proto_depIdxs,
		MessageInfos:      file_ydbcp_v1alpha1_backup_schedule_service_proto_msgTypes,
	}.Build()
	File_ydbcp_v1alpha1_backup_schedule_service_proto = out.File
	file_ydbcp_v1alpha1_backup_schedule_service_proto_rawDesc = nil
	file_ydbcp_v1alpha1_backup_schedule_service_proto_goTypes = nil
	file_ydbcp_v1alpha1_backup_schedule_service_proto_depIdxs = nil
}
