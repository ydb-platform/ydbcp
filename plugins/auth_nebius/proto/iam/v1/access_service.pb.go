// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: iam/v1/access_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthenticateResponse_ResultCode int32

const (
	AuthenticateResponse_OK              AuthenticateResponse_ResultCode = 0 // authentication was successful.
	AuthenticateResponse_UNKNOWN_SUBJECT AuthenticateResponse_ResultCode = 1 // if the subject: doesn't exist, deleted, not found or account doesn't exist in the tenant owning the resource.
	AuthenticateResponse_INVALID_TOKEN   AuthenticateResponse_ResultCode = 2 // The iam_token is not valid. It has an invalid length, invalid signature, etc.
)

// Enum value maps for AuthenticateResponse_ResultCode.
var (
	AuthenticateResponse_ResultCode_name = map[int32]string{
		0: "OK",
		1: "UNKNOWN_SUBJECT",
		2: "INVALID_TOKEN",
	}
	AuthenticateResponse_ResultCode_value = map[string]int32{
		"OK":              0,
		"UNKNOWN_SUBJECT": 1,
		"INVALID_TOKEN":   2,
	}
)

func (x AuthenticateResponse_ResultCode) Enum() *AuthenticateResponse_ResultCode {
	p := new(AuthenticateResponse_ResultCode)
	*p = x
	return p
}

func (x AuthenticateResponse_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticateResponse_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_iam_v1_access_service_proto_enumTypes[0].Descriptor()
}

func (AuthenticateResponse_ResultCode) Type() protoreflect.EnumType {
	return &file_iam_v1_access_service_proto_enumTypes[0]
}

func (x AuthenticateResponse_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticateResponse_ResultCode.Descriptor instead.
func (AuthenticateResponse_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{1, 0}
}

type AuthorizeResult_ResultCode int32

const (
	AuthorizeResult_OK                AuthorizeResult_ResultCode = 0 // Access granted.
	AuthorizeResult_PERMISSION_DENIED AuthorizeResult_ResultCode = 1 // Other cases of access denied.
	AuthorizeResult_UNKNOWN_SUBJECT   AuthorizeResult_ResultCode = 2 // if the subject: doesn't exist, deleted, not found or account doesn't exist in the tenant owning the resource.
	AuthorizeResult_INVALID_TOKEN     AuthorizeResult_ResultCode = 3 // The iam_token is not valid. It has an invalid length, invalid signature, etc.
)

// Enum value maps for AuthorizeResult_ResultCode.
var (
	AuthorizeResult_ResultCode_name = map[int32]string{
		0: "OK",
		1: "PERMISSION_DENIED",
		2: "UNKNOWN_SUBJECT",
		3: "INVALID_TOKEN",
	}
	AuthorizeResult_ResultCode_value = map[string]int32{
		"OK":                0,
		"PERMISSION_DENIED": 1,
		"UNKNOWN_SUBJECT":   2,
		"INVALID_TOKEN":     3,
	}
)

func (x AuthorizeResult_ResultCode) Enum() *AuthorizeResult_ResultCode {
	p := new(AuthorizeResult_ResultCode)
	*p = x
	return p
}

func (x AuthorizeResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizeResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_iam_v1_access_service_proto_enumTypes[1].Descriptor()
}

func (AuthorizeResult_ResultCode) Type() protoreflect.EnumType {
	return &file_iam_v1_access_service_proto_enumTypes[1]
}

func (x AuthorizeResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthorizeResult_ResultCode.Descriptor instead.
func (AuthorizeResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{5, 0}
}

type AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode int32

const (
	AuthorizeResult_AuthorizeStatus_UNSPECIFIED       AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode = 0
	AuthorizeResult_AuthorizeStatus_OK                AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode = 1
	AuthorizeResult_AuthorizeStatus_PERMISSION_DENIED AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode = 2
	AuthorizeResult_AuthorizeStatus_UNAUTHENTICATED   AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode = 3
)

// Enum value maps for AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode.
var (
	AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "OK",
		2: "PERMISSION_DENIED",
		3: "UNAUTHENTICATED",
	}
	AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode_value = map[string]int32{
		"UNSPECIFIED":       0,
		"OK":                1,
		"PERMISSION_DENIED": 2,
		"UNAUTHENTICATED":   3,
	}
)

func (x AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode) Enum() *AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode {
	p := new(AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode)
	*p = x
	return p
}

func (x AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_iam_v1_access_service_proto_enumTypes[2].Descriptor()
}

func (AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode) Type() protoreflect.EnumType {
	return &file_iam_v1_access_service_proto_enumTypes[2]
}

func (x AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode.Descriptor instead.
func (AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{5, 0, 0}
}

type AuthenticateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Credentials:
	//
	//	*AuthenticateRequest_IamToken
	//	*AuthenticateRequest_AwsCompatibleSignature
	//	*AuthenticateRequest_AnonymousCredential
	Credentials   isAuthenticateRequest_Credentials `protobuf_oneof:"credentials"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_iam_v1_access_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticateRequest) GetCredentials() isAuthenticateRequest_Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *AuthenticateRequest) GetIamToken() string {
	if x != nil {
		if x, ok := x.Credentials.(*AuthenticateRequest_IamToken); ok {
			return x.IamToken
		}
	}
	return ""
}

func (x *AuthenticateRequest) GetAwsCompatibleSignature() *AwsCompatibleSignature {
	if x != nil {
		if x, ok := x.Credentials.(*AuthenticateRequest_AwsCompatibleSignature); ok {
			return x.AwsCompatibleSignature
		}
	}
	return nil
}

func (x *AuthenticateRequest) GetAnonymousCredential() *AnonymousCredential {
	if x != nil {
		if x, ok := x.Credentials.(*AuthenticateRequest_AnonymousCredential); ok {
			return x.AnonymousCredential
		}
	}
	return nil
}

type isAuthenticateRequest_Credentials interface {
	isAuthenticateRequest_Credentials()
}

type AuthenticateRequest_IamToken struct {
	IamToken string `protobuf:"bytes,1,opt,name=iam_token,json=iamToken,proto3,oneof"` // Good old IAM token, signed by our token service. Avoid storing it as its both expiring and dangerous to leak
}

type AuthenticateRequest_AwsCompatibleSignature struct {
	AwsCompatibleSignature *AwsCompatibleSignature `protobuf:"bytes,2,opt,name=aws_compatible_signature,json=awsCompatibleSignature,proto3,oneof"` // For AWS compatible interface in our s3-compatible storage.
}

type AuthenticateRequest_AnonymousCredential struct {
	AnonymousCredential *AnonymousCredential `protobuf:"bytes,3,opt,name=anonymous_credential,json=anonymousCredential,proto3,oneof"` // for publicly available endpoints. Anonymous group permissions will be accessible here. https://docs.nebius.dev/en/iam/for-services/pseudogroups
}

func (*AuthenticateRequest_IamToken) isAuthenticateRequest_Credentials() {}

func (*AuthenticateRequest_AwsCompatibleSignature) isAuthenticateRequest_Credentials() {}

func (*AuthenticateRequest_AnonymousCredential) isAuthenticateRequest_Credentials() {}

type AuthenticateResponse struct {
	state            protoimpl.MessageState          `protogen:"open.v1"`
	ResultCode       AuthenticateResponse_ResultCode `protobuf:"varint,1,opt,name=resultCode,proto3,enum=nebius.iam.v1.AuthenticateResponse_ResultCode" json:"resultCode,omitempty"`
	Account          *Account                        `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	SessionExpiresAt *timestamppb.Timestamp          `protobuf:"bytes,3,opt,name=session_expires_at,json=sessionExpiresAt,proto3" json:"session_expires_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	mi := &file_iam_v1_access_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticateResponse) GetResultCode() AuthenticateResponse_ResultCode {
	if x != nil {
		return x.ResultCode
	}
	return AuthenticateResponse_OK
}

func (x *AuthenticateResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AuthenticateResponse) GetSessionExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SessionExpiresAt
	}
	return nil
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Checks        map[int64]*AuthorizeCheck `protobuf:"bytes,1,rep,name=checks,proto3" json:"checks,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	mi := &file_iam_v1_access_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorizeRequest) GetChecks() map[int64]*AuthorizeCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Results       map[int64]*AuthorizeResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	mi := &file_iam_v1_access_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{3}
}

func (x *AuthorizeResponse) GetResults() map[int64]*AuthorizeResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type AuthorizeCheck struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Permission   *Permission            `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"`
	ContainerId  string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ResourcePath *ResourcePath          `protobuf:"bytes,3,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*AuthorizeCheck_IamToken
	//	*AuthorizeCheck_Account
	//	*AuthorizeCheck_AwsCompatibleSignature
	//	*AuthorizeCheck_AnonymousCredential
	Identifier    isAuthorizeCheck_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeCheck) Reset() {
	*x = AuthorizeCheck{}
	mi := &file_iam_v1_access_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeCheck) ProtoMessage() {}

func (x *AuthorizeCheck) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeCheck.ProtoReflect.Descriptor instead.
func (*AuthorizeCheck) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorizeCheck) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *AuthorizeCheck) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *AuthorizeCheck) GetResourcePath() *ResourcePath {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *AuthorizeCheck) GetIdentifier() isAuthorizeCheck_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *AuthorizeCheck) GetIamToken() string {
	if x != nil {
		if x, ok := x.Identifier.(*AuthorizeCheck_IamToken); ok {
			return x.IamToken
		}
	}
	return ""
}

func (x *AuthorizeCheck) GetAccount() *Account {
	if x != nil {
		if x, ok := x.Identifier.(*AuthorizeCheck_Account); ok {
			return x.Account
		}
	}
	return nil
}

func (x *AuthorizeCheck) GetAwsCompatibleSignature() *AwsCompatibleSignature {
	if x != nil {
		if x, ok := x.Identifier.(*AuthorizeCheck_AwsCompatibleSignature); ok {
			return x.AwsCompatibleSignature
		}
	}
	return nil
}

func (x *AuthorizeCheck) GetAnonymousCredential() *AnonymousCredential {
	if x != nil {
		if x, ok := x.Identifier.(*AuthorizeCheck_AnonymousCredential); ok {
			return x.AnonymousCredential
		}
	}
	return nil
}

type isAuthorizeCheck_Identifier interface {
	isAuthorizeCheck_Identifier()
}

type AuthorizeCheck_IamToken struct {
	IamToken string `protobuf:"bytes,4,opt,name=iam_token,json=iamToken,proto3,oneof"`
}

type AuthorizeCheck_Account struct {
	Account *Account `protobuf:"bytes,5,opt,name=account,proto3,oneof"`
}

type AuthorizeCheck_AwsCompatibleSignature struct {
	AwsCompatibleSignature *AwsCompatibleSignature `protobuf:"bytes,6,opt,name=aws_compatible_signature,json=awsCompatibleSignature,proto3,oneof"`
}

type AuthorizeCheck_AnonymousCredential struct {
	AnonymousCredential *AnonymousCredential `protobuf:"bytes,7,opt,name=anonymous_credential,json=anonymousCredential,proto3,oneof"`
}

func (*AuthorizeCheck_IamToken) isAuthorizeCheck_Identifier() {}

func (*AuthorizeCheck_Account) isAuthorizeCheck_Identifier() {}

func (*AuthorizeCheck_AwsCompatibleSignature) isAuthorizeCheck_Identifier() {}

func (*AuthorizeCheck_AnonymousCredential) isAuthorizeCheck_Identifier() {}

type AuthorizeResult struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	ResultCode    AuthorizeResult_ResultCode       `protobuf:"varint,1,opt,name=resultCode,proto3,enum=nebius.iam.v1.AuthorizeResult_ResultCode" json:"resultCode,omitempty"`
	Account       *Account                         `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Status        *AuthorizeResult_AuthorizeStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeResult) Reset() {
	*x = AuthorizeResult{}
	mi := &file_iam_v1_access_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResult) ProtoMessage() {}

func (x *AuthorizeResult) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResult.ProtoReflect.Descriptor instead.
func (*AuthorizeResult) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{5}
}

func (x *AuthorizeResult) GetResultCode() AuthorizeResult_ResultCode {
	if x != nil {
		return x.ResultCode
	}
	return AuthorizeResult_OK
}

func (x *AuthorizeResult) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AuthorizeResult) GetStatus() *AuthorizeResult_AuthorizeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type AwsCompatibleSignature struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	AwsAccessKeyId string                   `protobuf:"bytes,1,opt,name=aws_access_key_id,json=awsAccessKeyId,proto3" json:"aws_access_key_id,omitempty"`
	StringToSign   string                   `protobuf:"bytes,2,opt,name=string_to_sign,json=stringToSign,proto3" json:"string_to_sign,omitempty"`
	Signature      string                   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	SignKeyParams  *AmzSignatureV4KeyParams `protobuf:"bytes,4,opt,name=sign_key_params,json=signKeyParams,proto3" json:"sign_key_params,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AwsCompatibleSignature) Reset() {
	*x = AwsCompatibleSignature{}
	mi := &file_iam_v1_access_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsCompatibleSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsCompatibleSignature) ProtoMessage() {}

func (x *AwsCompatibleSignature) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsCompatibleSignature.ProtoReflect.Descriptor instead.
func (*AwsCompatibleSignature) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{6}
}

func (x *AwsCompatibleSignature) GetAwsAccessKeyId() string {
	if x != nil {
		return x.AwsAccessKeyId
	}
	return ""
}

func (x *AwsCompatibleSignature) GetStringToSign() string {
	if x != nil {
		return x.StringToSign
	}
	return ""
}

func (x *AwsCompatibleSignature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AwsCompatibleSignature) GetSignKeyParams() *AmzSignatureV4KeyParams {
	if x != nil {
		return x.SignKeyParams
	}
	return nil
}

type AmzSignatureV4KeyParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AmzDate       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=amz_date,json=amzDate,proto3" json:"amz_date,omitempty"`
	AmzRegion     string                 `protobuf:"bytes,2,opt,name=amz_region,json=amzRegion,proto3" json:"amz_region,omitempty"`
	AmzService    string                 `protobuf:"bytes,3,opt,name=amz_service,json=amzService,proto3" json:"amz_service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AmzSignatureV4KeyParams) Reset() {
	*x = AmzSignatureV4KeyParams{}
	mi := &file_iam_v1_access_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AmzSignatureV4KeyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmzSignatureV4KeyParams) ProtoMessage() {}

func (x *AmzSignatureV4KeyParams) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmzSignatureV4KeyParams.ProtoReflect.Descriptor instead.
func (*AmzSignatureV4KeyParams) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{7}
}

func (x *AmzSignatureV4KeyParams) GetAmzDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AmzDate
	}
	return nil
}

func (x *AmzSignatureV4KeyParams) GetAmzRegion() string {
	if x != nil {
		return x.AmzRegion
	}
	return ""
}

func (x *AmzSignatureV4KeyParams) GetAmzService() string {
	if x != nil {
		return x.AmzService
	}
	return ""
}

type AnonymousCredential struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnonymousCredential) Reset() {
	*x = AnonymousCredential{}
	mi := &file_iam_v1_access_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnonymousCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousCredential) ProtoMessage() {}

func (x *AnonymousCredential) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousCredential.ProtoReflect.Descriptor instead.
func (*AnonymousCredential) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{8}
}

type AuthorizeResult_AuthorizeStatus struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Code          AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=nebius.iam.v1.AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode" json:"code,omitempty"`
	Message       string                                              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeResult_AuthorizeStatus) Reset() {
	*x = AuthorizeResult_AuthorizeStatus{}
	mi := &file_iam_v1_access_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeResult_AuthorizeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResult_AuthorizeStatus) ProtoMessage() {}

func (x *AuthorizeResult_AuthorizeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_access_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResult_AuthorizeStatus.ProtoReflect.Descriptor instead.
func (*AuthorizeResult_AuthorizeStatus) Descriptor() ([]byte, []int) {
	return file_iam_v1_access_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AuthorizeResult_AuthorizeStatus) GetCode() AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode {
	if x != nil {
		return x.Code
	}
	return AuthorizeResult_AuthorizeStatus_UNSPECIFIED
}

func (x *AuthorizeResult_AuthorizeStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_iam_v1_access_service_proto protoreflect.FileDescriptor

const file_iam_v1_access_service_proto_rawDesc = "" +
	"\n" +
	"\x1biam/v1/access_service.proto\x12\rnebius.iam.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13iam/v1/access.proto\"\xff\x01\n" +
	"\x13AuthenticateRequest\x12\x1d\n" +
	"\tiam_token\x18\x01 \x01(\tH\x00R\biamToken\x12a\n" +
	"\x18aws_compatible_signature\x18\x02 \x01(\v2%.nebius.iam.v1.AwsCompatibleSignatureH\x00R\x16awsCompatibleSignature\x12W\n" +
	"\x14anonymous_credential\x18\x03 \x01(\v2\".nebius.iam.v1.AnonymousCredentialH\x00R\x13anonymousCredentialB\r\n" +
	"\vcredentials\"\xa0\x02\n" +
	"\x14AuthenticateResponse\x12N\n" +
	"\n" +
	"resultCode\x18\x01 \x01(\x0e2..nebius.iam.v1.AuthenticateResponse.ResultCodeR\n" +
	"resultCode\x120\n" +
	"\aaccount\x18\x02 \x01(\v2\x16.nebius.iam.v1.AccountR\aaccount\x12H\n" +
	"\x12session_expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x10sessionExpiresAt\"<\n" +
	"\n" +
	"ResultCode\x12\x06\n" +
	"\x02OK\x10\x00\x12\x13\n" +
	"\x0fUNKNOWN_SUBJECT\x10\x01\x12\x11\n" +
	"\rINVALID_TOKEN\x10\x02\"\xb1\x01\n" +
	"\x10AuthorizeRequest\x12C\n" +
	"\x06checks\x18\x01 \x03(\v2+.nebius.iam.v1.AuthorizeRequest.ChecksEntryR\x06checks\x1aX\n" +
	"\vChecksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.nebius.iam.v1.AuthorizeCheckR\x05value:\x028\x01\"\xb8\x01\n" +
	"\x11AuthorizeResponse\x12G\n" +
	"\aresults\x18\x01 \x03(\v2-.nebius.iam.v1.AuthorizeResponse.ResultsEntryR\aresults\x1aZ\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.nebius.iam.v1.AuthorizeResultR\x05value:\x028\x01\"\xcd\x03\n" +
	"\x0eAuthorizeCheck\x129\n" +
	"\n" +
	"permission\x18\x01 \x01(\v2\x19.nebius.iam.v1.PermissionR\n" +
	"permission\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12@\n" +
	"\rresource_path\x18\x03 \x01(\v2\x1b.nebius.iam.v1.ResourcePathR\fresourcePath\x12\x1d\n" +
	"\tiam_token\x18\x04 \x01(\tH\x00R\biamToken\x122\n" +
	"\aaccount\x18\x05 \x01(\v2\x16.nebius.iam.v1.AccountH\x00R\aaccount\x12a\n" +
	"\x18aws_compatible_signature\x18\x06 \x01(\v2%.nebius.iam.v1.AwsCompatibleSignatureH\x00R\x16awsCompatibleSignature\x12W\n" +
	"\x14anonymous_credential\x18\a \x01(\v2\".nebius.iam.v1.AnonymousCredentialH\x00R\x13anonymousCredentialB\f\n" +
	"\n" +
	"identifier\"\x8d\x04\n" +
	"\x0fAuthorizeResult\x12I\n" +
	"\n" +
	"resultCode\x18\x01 \x01(\x0e2).nebius.iam.v1.AuthorizeResult.ResultCodeR\n" +
	"resultCode\x120\n" +
	"\aaccount\x18\x02 \x01(\v2\x16.nebius.iam.v1.AccountR\aaccount\x12F\n" +
	"\x06status\x18\x03 \x01(\v2..nebius.iam.v1.AuthorizeResult.AuthorizeStatusR\x06status\x1a\xdf\x01\n" +
	"\x0fAuthorizeStatus\x12V\n" +
	"\x04code\x18\x01 \x01(\x0e2B.nebius.iam.v1.AuthorizeResult.AuthorizeStatus.AuthorizeStatusCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"Z\n" +
	"\x13AuthorizeStatusCode\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x06\n" +
	"\x02OK\x10\x01\x12\x15\n" +
	"\x11PERMISSION_DENIED\x10\x02\x12\x13\n" +
	"\x0fUNAUTHENTICATED\x10\x03\"S\n" +
	"\n" +
	"ResultCode\x12\x06\n" +
	"\x02OK\x10\x00\x12\x15\n" +
	"\x11PERMISSION_DENIED\x10\x01\x12\x13\n" +
	"\x0fUNKNOWN_SUBJECT\x10\x02\x12\x11\n" +
	"\rINVALID_TOKEN\x10\x03\"\xd7\x01\n" +
	"\x16AwsCompatibleSignature\x12)\n" +
	"\x11aws_access_key_id\x18\x01 \x01(\tR\x0eawsAccessKeyId\x12$\n" +
	"\x0estring_to_sign\x18\x02 \x01(\tR\fstringToSign\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\tR\tsignature\x12N\n" +
	"\x0fsign_key_params\x18\x04 \x01(\v2&.nebius.iam.v1.AmzSignatureV4KeyParamsR\rsignKeyParams\"\x90\x01\n" +
	"\x17AmzSignatureV4KeyParams\x125\n" +
	"\bamz_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\aamzDate\x12\x1d\n" +
	"\n" +
	"amz_region\x18\x02 \x01(\tR\tamzRegion\x12\x1f\n" +
	"\vamz_service\x18\x03 \x01(\tR\n" +
	"amzService\"\x15\n" +
	"\x13AnonymousCredential2\xb8\x01\n" +
	"\rAccessService\x12W\n" +
	"\fAuthenticate\x12\".nebius.iam.v1.AuthenticateRequest\x1a#.nebius.iam.v1.AuthenticateResponse\x12N\n" +
	"\tAuthorize\x12\x1f.nebius.iam.v1.AuthorizeRequest\x1a .nebius.iam.v1.AuthorizeResponseBl\n" +
	" ai.nebius.iam.access.api.priv.v1B\x12AccessServiceProtoP\x01Z2a.yandex-team.ru/api/nebius-ai/proto/nebius/iam/v1b\x06proto3"

var (
	file_iam_v1_access_service_proto_rawDescOnce sync.Once
	file_iam_v1_access_service_proto_rawDescData []byte
)

func file_iam_v1_access_service_proto_rawDescGZIP() []byte {
	file_iam_v1_access_service_proto_rawDescOnce.Do(func() {
		file_iam_v1_access_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_iam_v1_access_service_proto_rawDesc), len(file_iam_v1_access_service_proto_rawDesc)))
	})
	return file_iam_v1_access_service_proto_rawDescData
}

var file_iam_v1_access_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_iam_v1_access_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_iam_v1_access_service_proto_goTypes = []any{
	(AuthenticateResponse_ResultCode)(0),                     // 0: nebius.iam.v1.AuthenticateResponse.ResultCode
	(AuthorizeResult_ResultCode)(0),                          // 1: nebius.iam.v1.AuthorizeResult.ResultCode
	(AuthorizeResult_AuthorizeStatus_AuthorizeStatusCode)(0), // 2: nebius.iam.v1.AuthorizeResult.AuthorizeStatus.AuthorizeStatusCode
	(*AuthenticateRequest)(nil),                              // 3: nebius.iam.v1.AuthenticateRequest
	(*AuthenticateResponse)(nil),                             // 4: nebius.iam.v1.AuthenticateResponse
	(*AuthorizeRequest)(nil),                                 // 5: nebius.iam.v1.AuthorizeRequest
	(*AuthorizeResponse)(nil),                                // 6: nebius.iam.v1.AuthorizeResponse
	(*AuthorizeCheck)(nil),                                   // 7: nebius.iam.v1.AuthorizeCheck
	(*AuthorizeResult)(nil),                                  // 8: nebius.iam.v1.AuthorizeResult
	(*AwsCompatibleSignature)(nil),                           // 9: nebius.iam.v1.AwsCompatibleSignature
	(*AmzSignatureV4KeyParams)(nil),                          // 10: nebius.iam.v1.AmzSignatureV4KeyParams
	(*AnonymousCredential)(nil),                              // 11: nebius.iam.v1.AnonymousCredential
	nil,                                                      // 12: nebius.iam.v1.AuthorizeRequest.ChecksEntry
	nil,                                                      // 13: nebius.iam.v1.AuthorizeResponse.ResultsEntry
	(*AuthorizeResult_AuthorizeStatus)(nil),                  // 14: nebius.iam.v1.AuthorizeResult.AuthorizeStatus
	(*Account)(nil),                                          // 15: nebius.iam.v1.Account
	(*timestamppb.Timestamp)(nil),                            // 16: google.protobuf.Timestamp
	(*Permission)(nil),                                       // 17: nebius.iam.v1.Permission
	(*ResourcePath)(nil),                                     // 18: nebius.iam.v1.ResourcePath
}
var file_iam_v1_access_service_proto_depIdxs = []int32{
	9,  // 0: nebius.iam.v1.AuthenticateRequest.aws_compatible_signature:type_name -> nebius.iam.v1.AwsCompatibleSignature
	11, // 1: nebius.iam.v1.AuthenticateRequest.anonymous_credential:type_name -> nebius.iam.v1.AnonymousCredential
	0,  // 2: nebius.iam.v1.AuthenticateResponse.resultCode:type_name -> nebius.iam.v1.AuthenticateResponse.ResultCode
	15, // 3: nebius.iam.v1.AuthenticateResponse.account:type_name -> nebius.iam.v1.Account
	16, // 4: nebius.iam.v1.AuthenticateResponse.session_expires_at:type_name -> google.protobuf.Timestamp
	12, // 5: nebius.iam.v1.AuthorizeRequest.checks:type_name -> nebius.iam.v1.AuthorizeRequest.ChecksEntry
	13, // 6: nebius.iam.v1.AuthorizeResponse.results:type_name -> nebius.iam.v1.AuthorizeResponse.ResultsEntry
	17, // 7: nebius.iam.v1.AuthorizeCheck.permission:type_name -> nebius.iam.v1.Permission
	18, // 8: nebius.iam.v1.AuthorizeCheck.resource_path:type_name -> nebius.iam.v1.ResourcePath
	15, // 9: nebius.iam.v1.AuthorizeCheck.account:type_name -> nebius.iam.v1.Account
	9,  // 10: nebius.iam.v1.AuthorizeCheck.aws_compatible_signature:type_name -> nebius.iam.v1.AwsCompatibleSignature
	11, // 11: nebius.iam.v1.AuthorizeCheck.anonymous_credential:type_name -> nebius.iam.v1.AnonymousCredential
	1,  // 12: nebius.iam.v1.AuthorizeResult.resultCode:type_name -> nebius.iam.v1.AuthorizeResult.ResultCode
	15, // 13: nebius.iam.v1.AuthorizeResult.account:type_name -> nebius.iam.v1.Account
	14, // 14: nebius.iam.v1.AuthorizeResult.status:type_name -> nebius.iam.v1.AuthorizeResult.AuthorizeStatus
	10, // 15: nebius.iam.v1.AwsCompatibleSignature.sign_key_params:type_name -> nebius.iam.v1.AmzSignatureV4KeyParams
	16, // 16: nebius.iam.v1.AmzSignatureV4KeyParams.amz_date:type_name -> google.protobuf.Timestamp
	7,  // 17: nebius.iam.v1.AuthorizeRequest.ChecksEntry.value:type_name -> nebius.iam.v1.AuthorizeCheck
	8,  // 18: nebius.iam.v1.AuthorizeResponse.ResultsEntry.value:type_name -> nebius.iam.v1.AuthorizeResult
	2,  // 19: nebius.iam.v1.AuthorizeResult.AuthorizeStatus.code:type_name -> nebius.iam.v1.AuthorizeResult.AuthorizeStatus.AuthorizeStatusCode
	3,  // 20: nebius.iam.v1.AccessService.Authenticate:input_type -> nebius.iam.v1.AuthenticateRequest
	5,  // 21: nebius.iam.v1.AccessService.Authorize:input_type -> nebius.iam.v1.AuthorizeRequest
	4,  // 22: nebius.iam.v1.AccessService.Authenticate:output_type -> nebius.iam.v1.AuthenticateResponse
	6,  // 23: nebius.iam.v1.AccessService.Authorize:output_type -> nebius.iam.v1.AuthorizeResponse
	22, // [22:24] is the sub-list for method output_type
	20, // [20:22] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_iam_v1_access_service_proto_init() }
func file_iam_v1_access_service_proto_init() {
	if File_iam_v1_access_service_proto != nil {
		return
	}
	file_iam_v1_access_proto_init()
	file_iam_v1_access_service_proto_msgTypes[0].OneofWrappers = []any{
		(*AuthenticateRequest_IamToken)(nil),
		(*AuthenticateRequest_AwsCompatibleSignature)(nil),
		(*AuthenticateRequest_AnonymousCredential)(nil),
	}
	file_iam_v1_access_service_proto_msgTypes[4].OneofWrappers = []any{
		(*AuthorizeCheck_IamToken)(nil),
		(*AuthorizeCheck_Account)(nil),
		(*AuthorizeCheck_AwsCompatibleSignature)(nil),
		(*AuthorizeCheck_AnonymousCredential)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_iam_v1_access_service_proto_rawDesc), len(file_iam_v1_access_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iam_v1_access_service_proto_goTypes,
		DependencyIndexes: file_iam_v1_access_service_proto_depIdxs,
		EnumInfos:         file_iam_v1_access_service_proto_enumTypes,
		MessageInfos:      file_iam_v1_access_service_proto_msgTypes,
	}.Build()
	File_iam_v1_access_service_proto = out.File
	file_iam_v1_access_service_proto_goTypes = nil
	file_iam_v1_access_service_proto_depIdxs = nil
}
